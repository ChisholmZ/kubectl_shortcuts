#!/bin/sh
#build pod on local kube
#~zach

source config.sh
source telhub.sh

FULL=$(pwd)
DIR=$(basename "$FULL")
i=0

for R in "${REPO[@]}"
do
   if [ $R == $DIR ]; then
       SERVICE_NAME="${SERVICE[$i]}"
   fi
   let i++
done

if [ -z "$1" ]; then
    PORT=4000
else
    PORT=$1
fi

DOCKER_TAG=$(git log -1 --format=%h)
DEPLOY_NAMESPACE=${DEPLOY_ENV}
ECR_REPO_NAME=${DEPLOY_NAMESPACE}-${SERVICE_NAME}
HELM_DEPLOYMENT_NAME=${DEPLOY_ENV}-${SERVICE_NAME}

echo "DOCKER_TAG $DOCKER_TAG";
echo "DEPLOY_ENV $DEPLOY_ENV";
echo "SERVICE_NAME $SERVICE_NAME";
echo "DEPLOY_NAMESPACE $DEPLOY_NAMESPACE";
echo "HELM_DEPLOYMENT_NAME $HELM_DEPLOYMENT_NAME";

$DOCKER build -f Dockerfile -t ${SERVICE_NAME}:latest .
$DOCKER tag ${SERVICE_NAME}:latest $DIR:$DOCKER_TAG
$DOCKER tag ${SERVICE_NAME}:latest $DIR:latest
# $DOCKER run -d -p $PORT:80 ${DIR}
# $DOCKER push ${DIR}:$DOCKER_TAG
# $DOCKER push ${DIR}:latest

kubectl config use-context $CONTEXT

RELEASE_NAME_LISTING=$(helm ls ${HELM_DEPLOYMENT_NAME} --namespace ${DEPLOY_NAMESPACE} --deployed)

## Check if Helm is installed otherwise upgrade
if [[ $RELEASE_NAME_LISTING == *"${HELM_DEPLOYMENT_NAME}"*"${DEPLOY_NAMESPACE}"* ]]
then
	helm upgrade --namespace ${DEPLOY_NAMESPACE} ${HELM_DEPLOYMENT_NAME} "${CHARTS}/${SERVICE_NAME}"  --set image.repository=${DIR} --set-string image.tag=$DOCKER_TAG  --recreate-pods
else
	helm install --namespace ${DEPLOY_NAMESPACE} "${CHARTS}/${SERVICE_NAME}" --name=${HELM_DEPLOYMENT_NAME} --set image.repository=${DIR} --set-string image.tag=$DOCKER_TAG
fi
