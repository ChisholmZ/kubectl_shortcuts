#!/bin/sh
#shortcut git status
#~zach

BASH_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )

source $BASH_DIR/ks_config.sh
source $BASH_DIR/telhub.sh

if [ ! -d $MAIN_DIR ]; then
    mkdir $MAIN_DIR
fi

cd $CHARTS

## create new helm chart from heartbeat
helm_chart(){
    if [ ! -d $1 ]; then
        cp -r heartbeat-ps-adapter $1
        for file in 'values.yaml' 'Chart.yaml' 'templates/_helpers.tpl' 'templates/ingress.yaml' 'templates/NOTES.txt' 'templates/tests/test-connection.yaml'
        do
            sed -i "s/heartbeat-ps-adapter/$1/g" $1/${file}
            sed -i "s/inbound-heartbeat-adapter/$1/g" $1/${file}
        done
        name=${1/-/_}
        echo $name
        sed -i "s/app_name_heartbeat/app_name_${name}/g" $1/templates/env.yaml
        sed -i "s/tractor_polling/${name}/g" $1/templates/env.yaml
        sed -i "s/TRACTOR_POLLING/${name^^}/g" $1/templates/env.yaml
        sed -i "s/TRACTOR/${name^^}/g" $1/templates/env.yaml
    fi
}

## update deployment file
cp_file(){
    cp heartbeat-ps-adapter/templates/${2}.yaml ${1}/templates/${2}.yaml
}

FILE='deployment'

if [ ! -z "$2" ]; then
    FILE=$2
fi

if [ "$1" == "all" ]; then
    for s in "${REPO_SERVICE[@]}"
    do
        if [ -z "${SKIP[$s]}" ]; then
            helm_chart $s
        fi
    done
elif [ "$1" == "f" ]; then
    for s in "${REPO_SERVICE[@]}"
    do
        if [ -z "${SKIP[$s]}" ]; then
            cp_file $s $FILE
        fi
    done
elif [ "$1" == "s" ] && [ ! -z "$2" ]; then
    helm_chart "${REPO_SERVICE[$2]}"
else
    select s in "${REPO_SERVICE[@]}"
    do
        helm_chart $s
        exit
    done
fi
