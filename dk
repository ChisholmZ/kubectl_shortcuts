#!/bin/bash
#shortcut to $DOCKER
#~zach

source ks_config.sh
source telhub.sh

FULL=$(pwd)
DIR=$(basename "$FULL")
DIR=$(echo $DIR | sed "s/telematics-hub-//g")
CON=$(docker ps -aqf "ancestor=${DIR}" -n 1)

if [ -z "$2" ]; then
    PORT=4000
else
    PORT=$2
fi

if [ -z "$3" ]; then
    PORT=80
else
    PORT=$3
fi

if [ -z "$2" ] && [ "$1" == 'scale' ]; then
    REPLICAS=1
else
    REPLICAS=$2
fi

SERVICE_NAME=${REPO_SERVICE[$DIR]}

if [ "$1" == 'build' ]; then
    $DOCKER build --tag=${DIR} .
elif [ "$1" == 'r' ] || [ "$1" == 'run' ]; then
    $DOCKER run -d -p $PORT:80 ${DIR}
elif [ "$1" == 'l' ] || [ "$1" == 'logs' ]; then
    $DOCKER logs ${CON}
elif [ "$1" == 'pull' ]; then
    docker pull ${DIR}:latest
elif [ "$1" == 'b' ]; then
    $DOCKER exec -it ${CON} //bin/bash
elif [ "$1" == 'root' ]; then
    $DOCKER exec -it --user root ${CON} //bin/bash
elif [ "$1" == 'p' ] || [ "$1" == 'prune' ]; then
    docker system prune -f -a
elif [ "$1" == 'ls' ]; then
    docker container ls -a
elif [ "$1" == 'i' ]; then
    docker ps -af "ancestor=${DIR}"
elif [ "$1" == 'kill' ]; then
    docker kill $(docker ps -aqf "ancestor=${DIR}")
elif [ "$1" == 'killall' ]; then
    docker kill $(docker ps -q)
elif [ "$1" == 'rmi' ]; then
    docker rmi -f $(docker ps -aqf "ancestor=${DIR}")
elif [ "$1" == 'd' ]; then
    POD=$(kubectl get pods | grep $SERVICE_NAME | awk '{print $1}')
    kubectl describe pod $POD
elif [ "$1" == 'scale' ]; then
    kubectl scale --replicas=$REPLICAS deployment/$SERVICE_NAME
fi
